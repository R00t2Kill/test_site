digraph PS2 {

    // =====================================================
    // General Graph Settings
    // =====================================================
    rankdir=TB;
    labelloc="t";
    label="Campus Energy Management System Architecture";
    fontsize=14;
    fontname="Helvetica";

    node [shape=box style=filled fontname="Helvetica" fontsize=10];
    edge [fontname="Helvetica" fontsize=9];

    // =====================================================
    // PHYSICAL INFRASTRUCTURE
    // =====================================================
    subgraph cluster_physical {
        label = "🏢 Physical Infrastructure";
        color = "#4CAF50";
        style = "rounded";

        Solar   [label="☀️ Solar Panels\n(250 kW) + IoT Sensors", fillcolor="#e1f5e1"];
        Battery [label="🔋 Battery Storage\n(200 kWh) + BMS", fillcolor="#e1f5e1"];
        Grid    [label="⚡ Grid Connection\n+ Smart Meter", fillcolor="#e1f5e1"];
        Loads   [label="🏫 Campus Loads\nLabs, Hostels, HVAC\n+ Smart Meters", fillcolor="#e1f5e1"];
    }

    // =====================================================
    // EDGE LAYER
    // =====================================================
    subgraph cluster_edge {
        label = "📡 Edge Layer - Data Acquisition";
        color = "#2196F3";
        style = "rounded";

        SolarInv    [label="Solar Inverter\nRS485 / Modbus", fillcolor="#e3f2fd"];
        BatteryBMS  [label="Battery BMS\nCAN Bus / Modbus", fillcolor="#e3f2fd"];
        GridMeter   [label="Grid Smart Meter\nModbus RTU", fillcolor="#e3f2fd"];
        LoadMeters  [label="Load Meters\nModbus TCP", fillcolor="#e3f2fd"];
    }

    // =====================================================
    // IOT GATEWAY
    // =====================================================
    subgraph cluster_gateway {
        label = "🌐 IoT Gateway";
        color = "#1976D2";
        style = "rounded";

        ModbusGW   [label="Modbus Gateway\nRaspberry Pi 4\nTCP/IP", fillcolor="#e3f2fd"];
        DataBuffer [label="Local Data Buffer\nRedis Cache", fillcolor="#e3f2fd"];
    }

    // =====================================================
    // BACKEND SERVER
    // =====================================================
    subgraph cluster_backend {
        label = "💻 Backend Server - FastAPI";
        color = "#FF9800";
        style = "rounded";

        API        [label="REST API Endpoints\nFastAPI", fillcolor="#fff3e0"];
        DB         [label="SQLite Database\nTime-series Storage", fillcolor="#fff3e0"];
        ML         [label="ML Engine\nScikit-learn\nRandom Forest", fillcolor="#fff3e0"];
        Optimizer  [label="Optimization Engine\nBattery Scheduling\nLoad Management", fillcolor="#fff3e0"];
        SimState   [label="Simulation State\nIn-Memory", fillcolor="#fff3e0"];
    }

    // =====================================================
    // FRONTEND DASHBOARD
    // =====================================================
    subgraph cluster_frontend {
        label = "🖥️ Frontend Dashboard";
        color = "#9C27B0";
        style = "rounded";

        WebUI     [label="Web Interface\nHTML5 + JavaScript", fillcolor="#f3e5f5"];
        RealTime  [label="Real-time Monitoring\n10-sec polling", fillcolor="#f3e5f5"];
        Controls  [label="Manual Controls\nBattery, Load", fillcolor="#f3e5f5"];
    }

    // =====================================================
    // EXTERNAL SERVICES
    // =====================================================
    subgraph cluster_external {
        label = "☁️ External Services";
        color = "#E91E63";
        style = "rounded";

        Weather [label="Weather API\nSolar Forecasting", fillcolor="#fce4ec"];
        Alerts  [label="Alert System\nEmail / SMS", fillcolor="#fce4ec"];
    }

    // =====================================================
    // CONNECTIONS
    // =====================================================

    // Physical → Edge
    Solar   -> SolarInv   [label="DC Power + Data"];
    Battery -> BatteryBMS [label="DC Power + Data"];
    Grid    -> GridMeter  [label="AC Power + Data"];
    Loads   -> LoadMeters [label="AC Power + Data"];

    // Edge → Gateway
    SolarInv   -> ModbusGW [label="Modbus RTU"];
    BatteryBMS -> ModbusGW [label="CAN Bus"];
    GridMeter  -> ModbusGW [label="Modbus TCP"];
    LoadMeters -> ModbusGW [label="Modbus TCP"];

    // Gateway processing
    ModbusGW   -> DataBuffer [label="Parse & Format\nJSON packets"];
    DataBuffer -> API        [label="HTTP POST\nEvery 10 sec"];

    // Backend processing
    API       -> DB         [label="Store"];
    DB        -> ML         [label="Historical Data"];
    ML        -> Optimizer  [label="Predictions"];
    API       -> SimState   [label="Current State"];
    SimState  -> Optimizer  [label="State Updates"];
    Optimizer -> API        [label="Recommendations"];

    // Weather Integration
    Weather -> ML [label="Hourly Forecast\nJSON API"];

    // Frontend Interaction
    WebUI    -> API [label="GET /api/status\nPOST /api/control"];
    API      -> WebUI [label="JSON Response\nReal-time Data"];
    RealTime -> WebUI [style=dashed label="Display"];
    Controls -> WebUI [style=dashed label="User Actions"];

    // Control Loop
    Optimizer  -> ModbusGW   [label="Control Commands\nMQTT/Modbus"];
    ModbusGW   -> BatteryBMS [label="Execute Commands"];
    ModbusGW   -> LoadMeters [label="Load Shedding"];

    // Alerts
    API    -> Alerts [label="Critical Events"];
    Alerts -> WebUI  [label="Notifications"];
}
